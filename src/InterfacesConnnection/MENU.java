/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacesConnnection;

import PackageFonction.*;
import javax.swing.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author admin
 */
public class MENU extends javax.swing.JFrame {

    /**
     * Creates new form MENU
     */
    public MENU() {
        initComponents();
        this.setLocationRelativeTo(null);
        jLayeredPane1.setVisible(false);
        jLayeredPane2.setVisible(false);
        s = (DefaultTableModel)TableStatLivre.getModel();
        ss = (DefaultTableModel)tableStatAdherent.getModel();
    }
    fonctUtlisateur util = new fonctUtlisateur();
    fonctLivre livre = new fonctLivre();
    fonctEmprunt emprunt = new fonctEmprunt();
    fonctAdherent adherent = new fonctAdherent();
    fonctStats stats = new fonctStats();
    public DefaultTableModel tbl;
    Connection con = null;
    Statement st;
    ResultSet rs;
    Date date = new Date();
    SimpleDateFormat formatDate = new SimpleDateFormat("yyyy-MM-dd");
    String format;
    int count;
    int ligne;
    int p = 0;
    boolean c = false;
    int ajout = 0;
    Object[] table = new Object[100];
    DefaultTableModel s, ss;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        BarreUtlisat = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        VuesUtilisateur = new javax.swing.JButton();
        BarreLivre = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        BarreAjoutL = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        BarreModifL = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        BarreSupL = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        BarreMaintenaceL = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        BarreVuesL = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        BarreEmprunt = new javax.swing.JPanel();
        jToolBar3 = new javax.swing.JToolBar();
        jButton10 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jButton11 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        BarreAdherent = new javax.swing.JPanel();
        jToolBar4 = new javax.swing.JToolBar();
        jButton12 = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jButton13 = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        jButton5 = new javax.swing.JButton();
        BarreStats = new javax.swing.JPanel();
        jToolBar5 = new javax.swing.JToolBar();
        jButton6 = new javax.swing.JButton();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        jButton7 = new javax.swing.JButton();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        modifierUtilisa = new javax.swing.JPanel();
        MNoU = new javax.swing.JLabel();
        MMdU = new javax.swing.JLabel();
        MNomU = new javax.swing.JTextField();
        MMdpU = new javax.swing.JTextField();
        AuthenModif = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        modifierUtilsa2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ComboModifU = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ModifNomU = new javax.swing.JTextField();
        ModifPrenomU = new javax.swing.JTextField();
        ModifTelephoneU = new javax.swing.JTextField();
        ModifStatutU = new javax.swing.JTextField();
        ModifSexeU = new javax.swing.JTextField();
        ModifMdpU = new javax.swing.JTextField();
        ModifConfirmU = new javax.swing.JTextField();
        ModifierUtilsateur = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        SupprimerUtilisa = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        SupprimerCompte = new javax.swing.JButton();
        ComboSupprimeU = new javax.swing.JComboBox<>();
        VoirUtilisateur = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vueUtilisateur = new javax.swing.JTable();
        AjouterLivre = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        AjoutNomL = new javax.swing.JTextField();
        AjoutGenreL = new javax.swing.JTextField();
        AjoutAuteurL = new javax.swing.JTextField();
        AjoutMEditionL = new javax.swing.JTextField();
        AjoutQuantite = new javax.swing.JTextField();
        AjoutAnneeSortL = new com.toedter.calendar.JDateChooser();
        AjoutDateEnregL = new com.toedter.calendar.JDateChooser();
        AjouterLivres = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        ModifLivre = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        ModifNomL = new javax.swing.JTextField();
        ModifGenreL = new javax.swing.JTextField();
        ModifAuteurL = new javax.swing.JTextField();
        ModifMEditionL = new javax.swing.JTextField();
        ModifierLivres = new javax.swing.JButton();
        ModifAnneeL = new com.toedter.calendar.JDateChooser();
        ModifDateEnreL = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        ModifNomRef = new javax.swing.JComboBox<>();
        jLabel45 = new javax.swing.JLabel();
        ModifQuantiteL = new javax.swing.JTextField();
        SupprimeLivre = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        supLivre = new javax.swing.JComboBox<>();
        SupprimLivre = new javax.swing.JButton();
        Maintenance = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        MoyenEndo = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        MesurePrise = new javax.swing.JTextArea();
        ComboMaintL = new javax.swing.JComboBox<>();
        MaintenanceLivre = new javax.swing.JButton();
        DateEnregisMaint = new com.toedter.calendar.JDateChooser();
        jLabel46 = new javax.swing.JLabel();
        MaintenanceQte = new javax.swing.JTextField();
        VoirLivre = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vueLivres = new javax.swing.JTable();
        VoirMaintenance = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        vueMiantenance = new javax.swing.JTable();
        EnregistrerEmprunt = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        EmpruntNomClient = new javax.swing.JComboBox<>();
        EmpruntQuantite = new javax.swing.JComboBox<>();
        EmpruntTelephone = new javax.swing.JTextField();
        ComboNomLivre = new javax.swing.JComboBox<>();
        DateEmprunt = new com.toedter.calendar.JDateChooser();
        DateDelai = new com.toedter.calendar.JDateChooser();
        AjoutLivre = new javax.swing.JButton();
        EnregistreEmprunt = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        vueLivreEmprunt = new javax.swing.JTable();
        SupLivre = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        RecupEmprunt = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        vueEmprunts = new javax.swing.JTable();
        RecupéréEmprunt = new javax.swing.JButton();
        EnregistrerAdherent = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        TelAdherent = new javax.swing.JTextField();
        AdresseAdherent = new javax.swing.JTextField();
        ComboLAdherent = new javax.swing.JComboBox<>();
        ComboNAdherent = new javax.swing.JComboBox<>();
        EnregisAdherent = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        SupprimerAdherent = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        SupprimeAdherent = new javax.swing.JButton();
        ComboSupAdherent = new javax.swing.JComboBox<>();
        VoirAdherent = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        vueAdherent = new javax.swing.JTable();
        StatAdherent = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tableStatAdherent = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        StatLivre = new javax.swing.JPanel();
        ComboStats = new javax.swing.JComboBox<>();
        Date_de_depart = new com.toedter.calendar.JDateChooser();
        Date_de_fin = new com.toedter.calendar.JDateChooser();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TableStatLivre = new javax.swing.JTable();
        BoutonRechercheStat = new javax.swing.JButton();
        AjouterUtilisa = new javax.swing.JPanel();
        NomU = new javax.swing.JLabel();
        tPreU = new javax.swing.JLabel();
        TelU = new javax.swing.JLabel();
        SexeU = new javax.swing.JLabel();
        StatU = new javax.swing.JLabel();
        MdpU = new javax.swing.JLabel();
        Confir = new javax.swing.JLabel();
        AjoutNomU = new javax.swing.JTextField();
        AjoutPreU = new javax.swing.JTextField();
        AjoutTelU = new javax.swing.JTextField();
        AjoutSexeU = new javax.swing.JTextField();
        AjoutStatU = new javax.swing.JTextField();
        CréerCompte = new javax.swing.JButton();
        AjoutMdpU = new javax.swing.JPasswordField();
        Confirm = new javax.swing.JPasswordField();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        GestionUtilisateur = new javax.swing.JLabel();
        GestionLivre = new javax.swing.JLabel();
        GestionEmprunt = new javax.swing.JLabel();
        GestionAdherent = new javax.swing.JLabel();
        Statistiques = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton1.setText("AJOUTER UTILISATEUR");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator1);

        jButton2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton2.setText("MODIFIER UTILISATEUR");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jToolBar1.add(jSeparator4);

        jButton3.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton3.setText("SUPPRIMER UTILISATEUR");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);
        jToolBar1.add(jSeparator7);

        VuesUtilisateur.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        VuesUtilisateur.setText("VOIR UTILISATEUR");
        VuesUtilisateur.setFocusable(false);
        VuesUtilisateur.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        VuesUtilisateur.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        VuesUtilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VuesUtilisateurActionPerformed(evt);
            }
        });
        jToolBar1.add(VuesUtilisateur);

        javax.swing.GroupLayout BarreUtlisatLayout = new javax.swing.GroupLayout(BarreUtlisat);
        BarreUtlisat.setLayout(BarreUtlisatLayout);
        BarreUtlisatLayout.setHorizontalGroup(
            BarreUtlisatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
            .addGroup(BarreUtlisatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE))
        );
        BarreUtlisatLayout.setVerticalGroup(
            BarreUtlisatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(BarreUtlisatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
        );

        jLayeredPane1.add(BarreUtlisat, "card2");

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        BarreAjoutL.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        BarreAjoutL.setText("AJOUTER LIVRE");
        BarreAjoutL.setFocusable(false);
        BarreAjoutL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BarreAjoutL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreAjoutL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarreAjoutLActionPerformed(evt);
            }
        });
        jToolBar2.add(BarreAjoutL);
        jToolBar2.add(jSeparator2);

        BarreModifL.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        BarreModifL.setText("MODIFIER LIVRE");
        BarreModifL.setFocusable(false);
        BarreModifL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BarreModifL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreModifL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarreModifLActionPerformed(evt);
            }
        });
        jToolBar2.add(BarreModifL);
        jToolBar2.add(jSeparator3);

        BarreSupL.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        BarreSupL.setText("SUPPRIMER LIVRE");
        BarreSupL.setFocusable(false);
        BarreSupL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BarreSupL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreSupL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarreSupLActionPerformed(evt);
            }
        });
        jToolBar2.add(BarreSupL);
        jToolBar2.add(jSeparator5);

        BarreMaintenaceL.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        BarreMaintenaceL.setText("MAINTENANCE");
        BarreMaintenaceL.setFocusable(false);
        BarreMaintenaceL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BarreMaintenaceL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreMaintenaceL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BarreMaintenaceLMouseClicked(evt);
            }
        });
        BarreMaintenaceL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarreMaintenaceLActionPerformed(evt);
            }
        });
        jToolBar2.add(BarreMaintenaceL);
        jToolBar2.add(jSeparator6);

        BarreVuesL.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        BarreVuesL.setText("VOIR LIVRE");
        BarreVuesL.setFocusable(false);
        BarreVuesL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BarreVuesL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreVuesL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BarreVuesLMouseClicked(evt);
            }
        });
        BarreVuesL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarreVuesLActionPerformed(evt);
            }
        });
        jToolBar2.add(BarreVuesL);
        jToolBar2.add(jSeparator11);

        jButton4.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        jButton4.setText("VOIR MAINTENANCE");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton4);

        javax.swing.GroupLayout BarreLivreLayout = new javax.swing.GroupLayout(BarreLivre);
        BarreLivre.setLayout(BarreLivreLayout);
        BarreLivreLayout.setHorizontalGroup(
            BarreLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, Short.MAX_VALUE)
        );
        BarreLivreLayout.setVerticalGroup(
            BarreLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jLayeredPane1.add(BarreLivre, "card3");

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        jButton10.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton10.setText("ENREGISTRER EMPRUNT");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton10);
        jToolBar3.add(jSeparator8);

        jButton11.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton11.setText("RECUPERER EMPRUNT");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton11);
        jToolBar3.add(jSeparator9);

        javax.swing.GroupLayout BarreEmpruntLayout = new javax.swing.GroupLayout(BarreEmprunt);
        BarreEmprunt.setLayout(BarreEmpruntLayout);
        BarreEmpruntLayout.setHorizontalGroup(
            BarreEmpruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        BarreEmpruntLayout.setVerticalGroup(
            BarreEmpruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jLayeredPane1.add(BarreEmprunt, "card4");

        jToolBar4.setFloatable(false);
        jToolBar4.setRollover(true);

        jButton12.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton12.setText("ENREGISTRER ADHERENT");
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jToolBar4.add(jButton12);
        jToolBar4.add(jSeparator10);

        jButton13.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton13.setText("SUPPRIMER ADHERENT");
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar4.add(jButton13);
        jToolBar4.add(jSeparator12);

        jButton5.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton5.setText("VUE ADHERENT");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar4.add(jButton5);

        javax.swing.GroupLayout BarreAdherentLayout = new javax.swing.GroupLayout(BarreAdherent);
        BarreAdherent.setLayout(BarreAdherentLayout);
        BarreAdherentLayout.setHorizontalGroup(
            BarreAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar4, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        BarreAdherentLayout.setVerticalGroup(
            BarreAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jLayeredPane1.add(BarreAdherent, "card5");

        jToolBar5.setFloatable(false);
        jToolBar5.setRollover(true);

        jButton6.setFont(new java.awt.Font("Arial Black", 0, 13)); // NOI18N
        jButton6.setText("STATS LIVRES");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar5.add(jButton6);
        jToolBar5.add(jSeparator13);

        jButton7.setFont(new java.awt.Font("Arial Black", 0, 13)); // NOI18N
        jButton7.setText("STATS ADHERENT");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar5.add(jButton7);

        javax.swing.GroupLayout BarreStatsLayout = new javax.swing.GroupLayout(BarreStats);
        BarreStats.setLayout(BarreStatsLayout);
        BarreStatsLayout.setHorizontalGroup(
            BarreStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar5, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        BarreStatsLayout.setVerticalGroup(
            BarreStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar5, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jLayeredPane1.add(BarreStats, "card6");

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 106, 640, 40));

        jLayeredPane2.setLayout(new java.awt.CardLayout());

        modifierUtilisa.setBackground(new java.awt.Color(30, 40, 91));
        modifierUtilisa.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MNoU.setBackground(new java.awt.Color(255, 255, 255));
        MNoU.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        MNoU.setForeground(new java.awt.Color(255, 255, 255));
        MNoU.setText("NOM");
        modifierUtilisa.add(MNoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 45, -1));

        MMdU.setBackground(new java.awt.Color(255, 255, 255));
        MMdU.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        MMdU.setForeground(new java.awt.Color(255, 255, 255));
        MMdU.setText("MOT DE PASSE");
        modifierUtilisa.add(MMdU, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 182, -1, 28));

        MNomU.setBackground(new java.awt.Color(30, 40, 91));
        MNomU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilisa.add(MNomU, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 101, 150, 30));

        MMdpU.setBackground(new java.awt.Color(30, 40, 91));
        MMdpU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        MMdpU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMdpUActionPerformed(evt);
            }
        });
        modifierUtilisa.add(MMdpU, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 176, 150, 30));

        AuthenModif.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AuthenModif.setText("VALIDER");
        AuthenModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthenModifActionPerformed(evt);
            }
        });
        modifierUtilisa.add(AuthenModif, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 259, 118, 44));

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vue3.jpg"))); // NOI18N
        modifierUtilisa.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 40, 30));

        jLayeredPane2.add(modifierUtilisa, "card3");

        modifierUtilsa2.setBackground(new java.awt.Color(30, 40, 91));
        modifierUtilsa2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(30, 40, 91));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Choississez le nom que vous souhaitez modifier", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 16), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("NOM");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 78, 27));

        jPanel1.add(ComboModifU, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 135, 34));

        modifierUtilsa2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 80));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NOM");
        modifierUtilsa2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PRENOM");
        modifierUtilsa2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("TELEPHONE");
        modifierUtilsa2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("STATUT");
        modifierUtilsa2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SEXE");
        jLabel7.setToolTipText("");
        modifierUtilsa2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 50, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("MOT DE PASSE");
        modifierUtilsa2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 130, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CONFIRMATION");
        modifierUtilsa2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 130, 30));

        ModifNomU.setBackground(new java.awt.Color(30, 40, 91));
        ModifNomU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilsa2.add(ModifNomU, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 120, -1));

        ModifPrenomU.setBackground(new java.awt.Color(30, 40, 91));
        ModifPrenomU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilsa2.add(ModifPrenomU, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 120, -1));

        ModifTelephoneU.setBackground(new java.awt.Color(30, 40, 91));
        ModifTelephoneU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilsa2.add(ModifTelephoneU, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 120, -1));

        ModifStatutU.setBackground(new java.awt.Color(30, 40, 91));
        ModifStatutU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilsa2.add(ModifStatutU, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 120, -1));

        ModifSexeU.setBackground(new java.awt.Color(30, 40, 91));
        ModifSexeU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilsa2.add(ModifSexeU, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 140, -1));

        ModifMdpU.setBackground(new java.awt.Color(30, 40, 91));
        ModifMdpU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilsa2.add(ModifMdpU, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 140, -1));

        ModifConfirmU.setBackground(new java.awt.Color(30, 40, 91));
        ModifConfirmU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        modifierUtilsa2.add(ModifConfirmU, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 140, -1));

        ModifierUtilsateur.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        ModifierUtilsateur.setText("VALIDER MODIFICATION");
        ModifierUtilsateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierUtilsateurActionPerformed(evt);
            }
        });
        modifierUtilsa2.add(ModifierUtilsateur, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, 210, 50));

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vue3.jpg"))); // NOI18N
        modifierUtilsa2.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 40, 30));

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vue3.jpg"))); // NOI18N
        modifierUtilsa2.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 210, 40, 30));

        jLayeredPane2.add(modifierUtilsa2, "card16");

        SupprimerUtilisa.setBackground(new java.awt.Color(30, 40, 91));
        SupprimerUtilisa.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("NOM");
        SupprimerUtilisa.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 110, 28));

        SupprimerCompte.setFont(new java.awt.Font("Times New Roman", 3, 17)); // NOI18N
        SupprimerCompte.setText("SUPPRIMER");
        SupprimerCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerCompteActionPerformed(evt);
            }
        });
        SupprimerUtilisa.add(SupprimerCompte, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 130, 50));

        SupprimerUtilisa.add(ComboSupprimeU, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 150, 30));

        jLayeredPane2.add(SupprimerUtilisa, "card4");

        VoirUtilisateur.setBackground(new java.awt.Color(30, 40, 91));

        vueUtilisateur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOM", "TELEPHONE", "SEXE", "STATUT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vueUtilisateur);

        javax.swing.GroupLayout VoirUtilisateurLayout = new javax.swing.GroupLayout(VoirUtilisateur);
        VoirUtilisateur.setLayout(VoirUtilisateurLayout);
        VoirUtilisateurLayout.setHorizontalGroup(
            VoirUtilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VoirUtilisateurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                .addContainerGap())
        );
        VoirUtilisateurLayout.setVerticalGroup(
            VoirUtilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoirUtilisateurLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 85, Short.MAX_VALUE))
        );

        jLayeredPane2.add(VoirUtilisateur, "card5");

        AjouterLivre.setBackground(new java.awt.Color(30, 40, 91));
        AjouterLivre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("NOM");
        AjouterLivre.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 60, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("GENRE");
        AjouterLivre.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 60, 20));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("ANNÉE DE SORTIE");
        AjouterLivre.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 130, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("AUTEUR");
        AjouterLivre.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("MAISON D'EDITION");
        AjouterLivre.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, 30));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("DATE ENREGISTREMENT");
        AjouterLivre.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, -1, 30));

        AjoutNomL.setBackground(new java.awt.Color(30, 40, 91));
        AjoutNomL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        AjouterLivre.add(AjoutNomL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 130, -1));

        AjoutGenreL.setBackground(new java.awt.Color(30, 40, 91));
        AjoutGenreL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        AjouterLivre.add(AjoutGenreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 130, -1));

        AjoutAuteurL.setBackground(new java.awt.Color(30, 40, 91));
        AjoutAuteurL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        AjouterLivre.add(AjoutAuteurL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 130, -1));

        AjoutMEditionL.setBackground(new java.awt.Color(30, 40, 91));
        AjoutMEditionL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        AjouterLivre.add(AjoutMEditionL, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 140, -1));

        AjoutQuantite.setBackground(new java.awt.Color(30, 40, 91));
        AjoutQuantite.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        AjouterLivre.add(AjoutQuantite, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 118, 140, -1));

        AjoutAnneeSortL.setBackground(new java.awt.Color(0, 204, 255));
        AjoutAnneeSortL.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        AjouterLivre.add(AjoutAnneeSortL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 130, -1));

        AjoutDateEnregL.setBackground(new java.awt.Color(0, 204, 255));
        AjouterLivre.add(AjoutDateEnregL, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, 140, -1));

        AjouterLivres.setFont(new java.awt.Font("Times New Roman", 3, 17)); // NOI18N
        AjouterLivres.setText("ENREGISTRER");
        AjouterLivres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterLivresActionPerformed(evt);
            }
        });
        AjouterLivre.add(AjouterLivres, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, 160, 50));

        jLabel44.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("QUANTITÉ");
        AjouterLivre.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 119, 90, 30));

        jLayeredPane2.add(AjouterLivre, "card6");

        ModifLivre.setBackground(new java.awt.Color(30, 40, 91));
        ModifLivre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("NOM");
        ModifLivre.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 50, 30));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("GENRE");
        ModifLivre.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 60, 30));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("ANNÉE DE SORTIE");
        ModifLivre.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 120, 30));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("AUTEUR");
        ModifLivre.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, 30));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("MAISON D'EDITION");
        ModifLivre.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, 30));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("DATE D'ENREGISTREMENT");
        ModifLivre.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, -1, 30));

        ModifNomL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        ModifLivre.add(ModifNomL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 130, -1));

        ModifGenreL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        ModifGenreL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifGenreLActionPerformed(evt);
            }
        });
        ModifLivre.add(ModifGenreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 130, -1));

        ModifAuteurL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        ModifLivre.add(ModifAuteurL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 130, -1));

        ModifMEditionL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        ModifLivre.add(ModifMEditionL, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 140, -1));

        ModifierLivres.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        ModifierLivres.setText("VALIDER MODIFICATION");
        ModifierLivres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierLivresActionPerformed(evt);
            }
        });
        ModifLivre.add(ModifierLivres, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 200, 50));

        ModifAnneeL.setBackground(new java.awt.Color(0, 204, 255));
        ModifLivre.add(ModifAnneeL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 130, -1));

        ModifDateEnreL.setBackground(new java.awt.Color(0, 204, 255));
        ModifLivre.add(ModifDateEnreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 160, 130, -1));

        jPanel2.setBackground(new java.awt.Color(30, 40, 91));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Choississez le livre que vous souhaitez modifier", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 16), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("NOM");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 35, -1, -1));

        jPanel2.add(ModifNomRef, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 30, 130, -1));

        ModifLivre.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 80));

        jLabel45.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("QUANTITÉ");
        ModifLivre.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        ModifQuantiteL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        ModifLivre.add(ModifQuantiteL, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 140, -1));

        jLayeredPane2.add(ModifLivre, "card7");

        SupprimeLivre.setBackground(new java.awt.Color(30, 40, 91));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("NOM");

        SupprimLivre.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        SupprimLivre.setText("SUPPRIMER");
        SupprimLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimLivreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SupprimeLivreLayout = new javax.swing.GroupLayout(SupprimeLivre);
        SupprimeLivre.setLayout(SupprimeLivreLayout);
        SupprimeLivreLayout.setHorizontalGroup(
            SupprimeLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SupprimeLivreLayout.createSequentialGroup()
                .addGroup(SupprimeLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SupprimeLivreLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(supLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SupprimeLivreLayout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(SupprimLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        SupprimeLivreLayout.setVerticalGroup(
            SupprimeLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SupprimeLivreLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(SupprimeLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supLivre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addComponent(SupprimLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        jLayeredPane2.add(SupprimeLivre, "card8");

        Maintenance.setBackground(new java.awt.Color(30, 40, 91));
        Maintenance.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("NOM");
        Maintenance.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 50, 20));

        jLabel41.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("DATE D'ENREGISTREMENT");
        Maintenance.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 190, 20));

        jLabel42.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("MOYEN D'ENDOMAGEMENT");
        Maintenance.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 200, 20));

        jLabel43.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("MESURE PRISE");
        Maintenance.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 110, 20));

        MoyenEndo.setBackground(new java.awt.Color(30, 40, 91));
        MoyenEndo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        Maintenance.add(MoyenEndo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 160, 30));

        MesurePrise.setBackground(new java.awt.Color(30, 40, 91));
        MesurePrise.setColumns(20);
        MesurePrise.setRows(5);
        MesurePrise.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        jScrollPane6.setViewportView(MesurePrise);

        Maintenance.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, -1, 80));

        Maintenance.add(ComboMaintL, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 160, 30));

        MaintenanceLivre.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        MaintenanceLivre.setText("VALIDER");
        MaintenanceLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaintenanceLivreActionPerformed(evt);
            }
        });
        Maintenance.add(MaintenanceLivre, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, 150, 40));

        DateEnregisMaint.setBackground(new java.awt.Color(0, 204, 255));
        Maintenance.add(DateEnregisMaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 160, -1));

        jLabel46.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("QUANTITÉ");
        Maintenance.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, -1, 20));

        MaintenanceQte.setBackground(new java.awt.Color(30, 40, 91));
        MaintenanceQte.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        Maintenance.add(MaintenanceQte, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 160, 30));

        jLayeredPane2.add(Maintenance, "card15");

        VoirLivre.setBackground(new java.awt.Color(30, 40, 91));

        vueLivres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOM", "GENRE", "AUTEUR", "MAISON D'EDITION", "DATE DE SORTIE", "DATE D'ERENGISTREMENT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(vueLivres);

        javax.swing.GroupLayout VoirLivreLayout = new javax.swing.GroupLayout(VoirLivre);
        VoirLivre.setLayout(VoirLivreLayout);
        VoirLivreLayout.setHorizontalGroup(
            VoirLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoirLivreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                .addContainerGap())
        );
        VoirLivreLayout.setVerticalGroup(
            VoirLivreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoirLivreLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );

        jLayeredPane2.add(VoirLivre, "card9");

        VoirMaintenance.setBackground(new java.awt.Color(30, 40, 91));

        vueMiantenance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(vueMiantenance);

        javax.swing.GroupLayout VoirMaintenanceLayout = new javax.swing.GroupLayout(VoirMaintenance);
        VoirMaintenance.setLayout(VoirMaintenanceLayout);
        VoirMaintenanceLayout.setHorizontalGroup(
            VoirMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoirMaintenanceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                .addContainerGap())
        );
        VoirMaintenanceLayout.setVerticalGroup(
            VoirMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoirMaintenanceLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 83, Short.MAX_VALUE))
        );

        jLayeredPane2.add(VoirMaintenance, "card17");

        EnregistrerEmprunt.setBackground(new java.awt.Color(30, 40, 91));
        EnregistrerEmprunt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("NOM DU CLIENT");
        EnregistrerEmprunt.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 130, 30));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("TELEPHONE");
        EnregistrerEmprunt.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, 40));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("NOM LIVRE");
        EnregistrerEmprunt.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 100, 40));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("DATE D'EMPRUNT");
        EnregistrerEmprunt.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 140, 30));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("DELAI DE REMISE");
        EnregistrerEmprunt.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 130, 30));

        EnregistrerEmprunt.add(EmpruntNomClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 130, 30));

        EmpruntQuantite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));
        EnregistrerEmprunt.add(EmpruntQuantite, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 130, 30));

        EmpruntTelephone.setBackground(new java.awt.Color(30, 40, 91));
        EmpruntTelephone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        EnregistrerEmprunt.add(EmpruntTelephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 130, -1));

        EnregistrerEmprunt.add(ComboNomLivre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 130, 30));

        DateEmprunt.setBackground(new java.awt.Color(0, 204, 255));
        EnregistrerEmprunt.add(DateEmprunt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        DateDelai.setBackground(new java.awt.Color(0, 204, 255));
        EnregistrerEmprunt.add(DateDelai, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 130, -1));

        AjoutLivre.setText("AjouterLivre");
        AjoutLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutLivreActionPerformed(evt);
            }
        });
        EnregistrerEmprunt.add(AjoutLivre, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 100, 40));

        EnregistreEmprunt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        EnregistreEmprunt.setText("VALIDER EMPRUNT");
        EnregistreEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistreEmpruntActionPerformed(evt);
            }
        });
        EnregistrerEmprunt.add(EnregistreEmprunt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 318, 170, 40));

        vueLivreEmprunt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOM LIVRE", "Quantité"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(vueLivreEmprunt);

        EnregistrerEmprunt.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 190, 200));

        SupLivre.setText("SupprimerLivre");
        SupLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupLivreActionPerformed(evt);
            }
        });
        EnregistrerEmprunt.add(SupLivre, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 120, 40));

        jLabel47.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("QUANTITÉ");
        EnregistrerEmprunt.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLayeredPane2.add(EnregistrerEmprunt, "card10");

        RecupEmprunt.setBackground(new java.awt.Color(30, 40, 91));
        RecupEmprunt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vueEmprunts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(vueEmprunts);

        RecupEmprunt.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 618, 322));

        RecupéréEmprunt.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        RecupéréEmprunt.setText("RECUPERER");
        RecupéréEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecupéréEmpruntActionPerformed(evt);
            }
        });
        RecupEmprunt.add(RecupéréEmprunt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 160, 50));

        jLayeredPane2.add(RecupEmprunt, "card11");

        EnregistrerAdherent.setBackground(new java.awt.Color(30, 40, 91));
        EnregistrerAdherent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("NOM");
        EnregistrerAdherent.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 60, 30));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("TELEPHONE");
        EnregistrerAdherent.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 100, 30));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("NOM LIVRE");
        EnregistrerAdherent.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 100, 30));

        TelAdherent.setBackground(new java.awt.Color(30, 40, 91));
        TelAdherent.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        EnregistrerAdherent.add(TelAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 140, 30));

        AdresseAdherent.setBackground(new java.awt.Color(30, 40, 91));
        AdresseAdherent.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 255)));
        EnregistrerAdherent.add(AdresseAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 140, 30));

        EnregistrerAdherent.add(ComboLAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 140, 30));

        ComboNAdherent.setEditable(true);
        EnregistrerAdherent.add(ComboNAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 140, 30));

        EnregisAdherent.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        EnregisAdherent.setText("ENREGISTRER ADHERENT");
        EnregisAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregisAdherentActionPerformed(evt);
            }
        });
        EnregistrerAdherent.add(EnregisAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 250, 50));

        jLabel48.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("ADRESSE");
        EnregistrerAdherent.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        jLayeredPane2.add(EnregistrerAdherent, "card12");

        SupprimerAdherent.setBackground(new java.awt.Color(30, 40, 91));
        SupprimerAdherent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("NOM");
        SupprimerAdherent.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 157, 49, 28));

        SupprimeAdherent.setFont(new java.awt.Font("Times New Roman", 3, 17)); // NOI18N
        SupprimeAdherent.setText("SUPPRIMER ADHERENT");
        SupprimeAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimeAdherentActionPerformed(evt);
            }
        });
        SupprimerAdherent.add(SupprimeAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 233, 48));

        SupprimerAdherent.add(ComboSupAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 156, 130, 30));

        jLayeredPane2.add(SupprimerAdherent, "card13");

        VoirAdherent.setBackground(new java.awt.Color(30, 40, 91));

        vueAdherent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOM", "TELEPHONE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(vueAdherent);

        javax.swing.GroupLayout VoirAdherentLayout = new javax.swing.GroupLayout(VoirAdherent);
        VoirAdherent.setLayout(VoirAdherentLayout);
        VoirAdherentLayout.setHorizontalGroup(
            VoirAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoirAdherentLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        VoirAdherentLayout.setVerticalGroup(
            VoirAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoirAdherentLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 112, Short.MAX_VALUE))
        );

        jLayeredPane2.add(VoirAdherent, "card14");

        StatAdherent.setBackground(new java.awt.Color(30, 40, 91));
        StatAdherent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableStatAdherent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane9.setViewportView(tableStatAdherent);

        StatAdherent.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 114, 619, 290));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tout", "Adherent les plus frequent", "Adherent qui emprunt le plus", "Adherent qui emprunt le moins" }));
        StatAdherent.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 160, 40));

        jDateChooser1.setBackground(new java.awt.Color(0, 204, 255));
        StatAdherent.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 26, 160, 30));

        jDateChooser2.setBackground(new java.awt.Color(0, 204, 255));
        StatAdherent.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 26, 160, 30));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("DE:");
        StatAdherent.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 30, -1));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("A:");
        StatAdherent.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 20, -1));

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jButton8.setText("RECHERCHE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        StatAdherent.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 150, 40));

        jLayeredPane2.add(StatAdherent, "card18");

        StatLivre.setBackground(new java.awt.Color(30, 40, 91));
        StatLivre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ComboStats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tout", "Les livres les plus empruntés", "Les livres les moins empruntés", "Les livres les plus utilisés" }));
        StatLivre.add(ComboStats, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 165, 36));

        Date_de_depart.setBackground(new java.awt.Color(0, 204, 255));
        StatLivre.add(Date_de_depart, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 160, 32));

        Date_de_fin.setBackground(new java.awt.Color(0, 204, 255));
        StatLivre.add(Date_de_fin, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 160, 32));

        jLabel49.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("DE:");
        StatLivre.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 30, 30));

        jLabel50.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("A:");
        StatLivre.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 20, 30));

        TableStatLivre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom Livre", "Date D'enregistrement", "Quantité", "Quantité disponible", "Quantité en emprunt", "Nombre de fois emprunté", "Nombre de fois utilisé"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableStatLivre.setColumnSelectionAllowed(true);
        jScrollPane8.setViewportView(TableStatLivre);
        TableStatLivre.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        StatLivre.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 620, 290));

        BoutonRechercheStat.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BoutonRechercheStat.setText("RECHERCHE");
        BoutonRechercheStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonRechercheStatActionPerformed(evt);
            }
        });
        StatLivre.add(BoutonRechercheStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 150, -1));

        jLayeredPane2.add(StatLivre, "card19");

        AjouterUtilisa.setBackground(new java.awt.Color(30, 40, 91));
        AjouterUtilisa.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NomU.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        NomU.setForeground(new java.awt.Color(255, 255, 255));
        NomU.setText("NOM");
        AjouterUtilisa.add(NomU, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 57, 28));

        tPreU.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tPreU.setForeground(new java.awt.Color(255, 255, 255));
        tPreU.setText("PRENOM");
        AjouterUtilisa.add(tPreU, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, 28));

        TelU.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        TelU.setForeground(new java.awt.Color(255, 255, 255));
        TelU.setText("TELEPHONE");
        TelU.setToolTipText("");
        AjouterUtilisa.add(TelU, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, -1, 28));

        SexeU.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        SexeU.setForeground(new java.awt.Color(255, 255, 255));
        SexeU.setText("SEXE");
        AjouterUtilisa.add(SexeU, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, 28));

        StatU.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        StatU.setForeground(new java.awt.Color(255, 255, 255));
        StatU.setText("STATUT");
        AjouterUtilisa.add(StatU, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 90, 26));

        MdpU.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        MdpU.setForeground(new java.awt.Color(255, 255, 255));
        MdpU.setText("MOT DE PASSE");
        AjouterUtilisa.add(MdpU, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, -1, 23));

        Confir.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Confir.setForeground(new java.awt.Color(255, 255, 255));
        Confir.setText("CONFIRMER");
        AjouterUtilisa.add(Confir, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 98, 29));

        AjoutNomU.setBackground(new java.awt.Color(30, 40, 91));
        AjoutNomU.setForeground(new java.awt.Color(255, 255, 255));
        AjoutNomU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 153)));
        AjouterUtilisa.add(AjoutNomU, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 129, 30));

        AjoutPreU.setBackground(new java.awt.Color(30, 40, 91));
        AjoutPreU.setForeground(new java.awt.Color(255, 255, 255));
        AjoutPreU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        AjouterUtilisa.add(AjoutPreU, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 127, -1));

        AjoutTelU.setBackground(new java.awt.Color(30, 40, 91));
        AjoutTelU.setForeground(new java.awt.Color(255, 255, 255));
        AjoutTelU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        AjouterUtilisa.add(AjoutTelU, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 127, -1));

        AjoutSexeU.setBackground(new java.awt.Color(30, 40, 91));
        AjoutSexeU.setForeground(new java.awt.Color(255, 255, 255));
        AjoutSexeU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        AjouterUtilisa.add(AjoutSexeU, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 127, -1));

        AjoutStatU.setBackground(new java.awt.Color(30, 40, 91));
        AjoutStatU.setForeground(new java.awt.Color(255, 255, 255));
        AjoutStatU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        AjouterUtilisa.add(AjoutStatU, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 147, -1));

        CréerCompte.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        CréerCompte.setText("CRÉER COMPTE");
        CréerCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CréerCompteActionPerformed(evt);
            }
        });
        AjouterUtilisa.add(CréerCompte, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 297, 150, 50));

        AjoutMdpU.setBackground(new java.awt.Color(30, 40, 91));
        AjoutMdpU.setForeground(new java.awt.Color(255, 255, 255));
        AjoutMdpU.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        AjouterUtilisa.add(AjoutMdpU, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 150, -1));

        Confirm.setBackground(new java.awt.Color(30, 40, 91));
        Confirm.setForeground(new java.awt.Color(255, 255, 255));
        Confirm.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        AjouterUtilisa.add(Confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 150, -1));

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vue3.jpg"))); // NOI18N
        AjouterUtilisa.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 40, 30));

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vue3.jpg"))); // NOI18N
        AjouterUtilisa.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, 40, 30));

        jLayeredPane2.add(AjouterUtilisa, "card2");

        getContentPane().add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 640, 410));

        GestionUtilisateur.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        GestionUtilisateur.setForeground(new java.awt.Color(255, 255, 255));
        GestionUtilisateur.setText("GESTION UTILISATEUR");
        GestionUtilisateur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionUtilisateurMouseClicked(evt);
            }
        });
        getContentPane().add(GestionUtilisateur, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 220, 40));

        GestionLivre.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        GestionLivre.setForeground(new java.awt.Color(255, 255, 255));
        GestionLivre.setText("GESTION LIVRE");
        GestionLivre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionLivreMouseClicked(evt);
            }
        });
        getContentPane().add(GestionLivre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 230, 40));

        GestionEmprunt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        GestionEmprunt.setForeground(new java.awt.Color(255, 255, 255));
        GestionEmprunt.setText("GESTION EMPRUNT");
        GestionEmprunt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionEmpruntMouseClicked(evt);
            }
        });
        getContentPane().add(GestionEmprunt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 230, 40));

        GestionAdherent.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        GestionAdherent.setForeground(new java.awt.Color(255, 255, 255));
        GestionAdherent.setText("GESTION ADHERENT");
        GestionAdherent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionAdherentMouseClicked(evt);
            }
        });
        getContentPane().add(GestionAdherent, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 230, 40));

        Statistiques.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Statistiques.setForeground(new java.awt.Color(255, 255, 255));
        Statistiques.setText("STATISTIQUES");
        Statistiques.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StatistiquesMouseClicked(evt);
            }
        });
        getContentPane().add(Statistiques, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 432, 220, 30));

        jLabel38.setText("Nom de celui connecté");
        getContentPane().add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 170, 20));

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("DECONNECTION");
        jLabel39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel39MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, 160, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu1.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 920, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ModifGenreLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifGenreLActionPerformed

    }//GEN-LAST:event_ModifGenreLActionPerformed

    private void GestionUtilisateurMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionUtilisateurMouseClicked
        jLayeredPane1.setVisible(true);
        jLayeredPane1.removeAll();
        jLayeredPane1.add(BarreUtlisat);
        jLayeredPane1.repaint();
    }//GEN-LAST:event_GestionUtilisateurMouseClicked

    private void GestionLivreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionLivreMouseClicked
        jLayeredPane1.setVisible(true);
        jLayeredPane1.removeAll();
        jLayeredPane1.add(BarreLivre);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }//GEN-LAST:event_GestionLivreMouseClicked

    private void GestionEmpruntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionEmpruntMouseClicked
        jLayeredPane1.setVisible(true);
        jLayeredPane1.removeAll();
        jLayeredPane1.add(BarreEmprunt);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }//GEN-LAST:event_GestionEmpruntMouseClicked

    private void GestionAdherentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionAdherentMouseClicked
        jLayeredPane1.setVisible(true);
        jLayeredPane1.removeAll();
        jLayeredPane1.add(BarreAdherent);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }//GEN-LAST:event_GestionAdherentMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(AjouterUtilisa);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(modifierUtilisa);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(SupprimerUtilisa);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        ComboSupprimeU.removeAllItems();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom FROM utilisateur");
            
            while(rs.next()){
                ComboSupprimeU.addItem(rs.getString("Nom"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void VuesUtilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VuesUtilisateurActionPerformed
        VuesUtilisateur.removeAll();
        try {          
           con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
           st = con.createStatement();
           rs = st.executeQuery("SELECT Nom as Utilisateur, Num_telephone as Telephone, Sexe, Statut FROM utilisateur");
           vueUtilisateur.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            System.out.print("L'erreur est" + e);
        }
        
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(VoirUtilisateur);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_VuesUtilisateurActionPerformed

    private void BarreAjoutLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarreAjoutLActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(AjouterLivre);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_BarreAjoutLActionPerformed

    private void BarreModifLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarreModifLActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(ModifLivre);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        ModifNomRef.removeAllItems();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom_Livre FROM livre");

            while(rs.next()){
                ModifNomRef.addItem(rs.getString("Nom_Livre"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_BarreModifLActionPerformed

    private void BarreSupLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarreSupLActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(SupprimeLivre);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        supLivre.removeAllItems();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom_Livre FROM livre");

            while(rs.next()){
                supLivre.addItem(rs.getString("Nom_Livre"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_BarreSupLActionPerformed

    private void BarreMaintenaceLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarreMaintenaceLMouseClicked
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(Maintenance);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_BarreMaintenaceLMouseClicked

    private void BarreVuesLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarreVuesLMouseClicked
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(VoirLivre);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_BarreVuesLMouseClicked

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(EnregistrerEmprunt);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        ComboNomLivre.removeAllItems();
        EmpruntNomClient.removeAllItems();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom_Livre FROM livre");
            
            while(rs.next()){
                ComboNomLivre.addItem(rs.getString("Nom_Livre"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom FROM adherent");
            
            while(rs.next()){
                EmpruntNomClient.addItem(rs.getString("Nom"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
            System.out.print("L'erreur est" + e);
        }
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(RecupEmprunt);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        vueLivreEmprunt.removeAll();
        try {          
           con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
           st = con.createStatement();
           rs = st.executeQuery("SELECT * FROM emprunts");
           vueEmprunts.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            System.out.print("L'erreur est" + e);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(EnregistrerAdherent);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        ComboNAdherent.removeAllItems();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom FROM adherent");
            
            while(rs.next()){
                ComboNAdherent.addItem(rs.getString("Nom"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom_livre FROM livre");
            
            while(rs.next()){
                ComboLAdherent.addItem(rs.getString("Nom_Livre"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(SupprimerAdherent);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom FROM adherent");
            
            while(rs.next()){
                ComboSupAdherent.addItem(rs.getString("Nom"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void CréerCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CréerCompteActionPerformed
        util.Nom = this.AjoutNomU.getText();
        util.Prenom = this.AjoutPreU.getText();
        util.Num_telephone = this.AjoutTelU.getText();
        util.Sexe = this.AjoutSexeU.getText();
        util.Statut = this.AjoutStatU.getText();
        util.Mot_de_passe = String.copyValueOf(AjoutMdpU.getPassword());
        
        util.b = true;
        util.verifierUtilisateur();
        System.out.print(util.b);
        if (util.b == true){
            if (AjoutNomU.getText().equals("") || AjoutPreU.getText().equals("") || AjoutTelU.getText().equals("") || AjoutSexeU.getText().equals("") || AjoutStatU.getText().equals("") || AjoutMdpU.getText().equals("") || Confirm.getText().equals("")){
                JOptionPane.showMessageDialog(this, "VEUILLEZ REMPLIR TOUS LES CHAMPS", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
            else{
                //System.out.print(AjoutMdpU.getText());
                if (String.copyValueOf(AjoutMdpU.getPassword()).equals(String.copyValueOf(Confirm.getPassword()))){
                    util.a = false;
                    util.AjouterUtilisateur();
                    if (util.a == true){
                        JOptionPane.showMessageDialog(this, "LE COMPTE A ÉTÉ CRÉE !", "Information",JOptionPane.INFORMATION_MESSAGE);
                        this.AjoutNomU.setText("");
                        this.AjoutPreU.setText("");
                        this.AjoutTelU.setText("");
                        this.AjoutSexeU.setText("");
                        this.AjoutStatU.setText("");
                        this.AjoutMdpU.setText("");
                        this.Confirm.setText("");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "LES MOTS DE PASSE NE CORESPONDENT PAS", "Erreur",JOptionPane.ERROR_MESSAGE);
                }
            }   
        }
        else{
            JOptionPane.showMessageDialog(this, "VEUILLEZ CHANGER LE NOM D'UTILISATEUR", "Erreur",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_CréerCompteActionPerformed

    private void AuthenModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthenModifActionPerformed
        util.Nom = this.MNomU.getText();
        util.Mot_de_passe = this.MMdpU.getText();
        
        if (MNomU.getText().equals("") || MMdpU.getText().equals("")){
            JOptionPane.showMessageDialog(this, "VEUILLEZ REMPLIR TOUS LES CHAMPS", "Erreur",JOptionPane.ERROR_MESSAGE);
        }
        else{
            util.ModifierUtilisateur();
            if (util.a == true){
                jLayeredPane2.setVisible(true);
                jLayeredPane2.removeAll();
                jLayeredPane2.add(modifierUtilsa2);
                jLayeredPane2.repaint();
                jLayeredPane2.revalidate();
                this.MNomU.setText("");
                this.MMdpU.setText("");
                try {
                    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
                    st =con.createStatement();
                    rs = st.executeQuery("SELECT Nom FROM utilisateur");
                    ComboModifU.removeAllItems();
                    while(rs.next()){
                        ComboModifU.addItem(rs.getString("Nom"));
                    }
                    rs.close();
                    st.close();
                    con.close();
                } catch (SQLException e) {
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "VEUILLEZ VERIFIER VOS INFORMATIONS", "Erreur D'authentification", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_AuthenModifActionPerformed

    private void BarreVuesLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarreVuesLActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(VoirLivre);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        vueLivres.removeAll();
        try {          
           con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
           st = con.createStatement();
           rs = st.executeQuery("SELECT * FROM livre");
           vueLivres.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            System.out.print("L'erreur est" + e);
        }
    }//GEN-LAST:event_BarreVuesLActionPerformed

    private void ModifierLivresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierLivresActionPerformed
        livre.NomLivre = this.ModifNomL.getText();
        livre.Genre = this.ModifGenreL.getText();
        
        format = formatDate.format(ModifAnneeL.getDate());
        livre.annéeSortie = java.sql.Date.valueOf(format);
        livre.Auteur = this.ModifAuteurL.getText();
        livre.MaisonEdition = this.ModifMEditionL.getText();
        
        format = formatDate.format(ModifDateEnreL.getDate());
        livre.DateEnregistrement = java.sql.Date.valueOf(format);
        livre.Quantité = Integer.parseInt(this.ModifQuantiteL.getText());
        livre.llivre = this.ModifNomRef.getSelectedItem().toString();
        
        
        if (ModifNomL.getText().equals("") || ModifGenreL.getText().equals("") || ModifAnneeL.getDate().equals("") || ModifAuteurL.getText().equals("") || ModifMEditionL.getText().equals("") || ModifDateEnreL.getDate().equals("") || ModifQuantiteL.getText().equals("")){
            JOptionPane.showMessageDialog(this, "VUEILLEZ REMPLIR TOUS LES CHAMPS", "Erreur",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int option = JOptionPane.showConfirmDialog(null, "VOULEZ-VOUS MODIFIER CE LIVRE", "Confirmation", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (option == JOptionPane.OK_OPTION){
                livre.ModifierLivre();
                if (livre.a == true){
                    JOptionPane.showMessageDialog(this, "LES MODIFICATIONS ONT ÉTÉ ENREGISTRÉES", "Information",JOptionPane.INFORMATION_MESSAGE);
                    this.ModifNomL.setText("");
                    this.ModifGenreL.setText("");
                    this.ModifAnneeL.setDate(null);
                    this.ModifAuteurL.setText("");
                    this.ModifMEditionL.setText("");
                    this.ModifDateEnreL.setDate(null);
                    this.ModifQuantiteL.setText("");
                    this.ModifNomRef.setSelectedItem("");
                }
                else{
                    JOptionPane.showMessageDialog(this, "LA MODIFICATION N'A PAS PU ETRE ÉFFECTUÉ", "Erreur",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
    }//GEN-LAST:event_ModifierLivresActionPerformed

    private void ModifierUtilsateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierUtilsateurActionPerformed
        util.Nom = this.ModifNomU.getText();
        util.Prenom = this.ModifPrenomU.getText();
        util.Num_telephone = this.ModifTelephoneU.getText();
        util.Sexe = this.ModifSexeU.getText();
        util.Statut = this.ModifStatutU.getText();
        util.Mot_de_passe = this.ModifMdpU.getText();
        util.nnom = this.ComboModifU.getSelectedItem().toString();
        System.out.print(util.nnom);
        if (ModifNomU.getText().equals("") || ModifPrenomU.getText().equals("") || ModifTelephoneU.getText().equals("") || ModifStatutU.getText().equals("") || ModifSexeU.getText().equals("") || ModifMdpU.getText().equals("") || ModifConfirmU.getText().equals("")){
            JOptionPane.showMessageDialog(this, "VEUILLEZ REMPLIR TOUS LES CHAMPS", "Erreur",JOptionPane.ERROR_MESSAGE);
        }
        else{
            if (ModifMdpU.getText().equals(ModifConfirmU.getText())){
                int option = JOptionPane.showConfirmDialog(null, "VOULEZ-VOUS MODIFER CE COMPTE", "Confirmation", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (option == JOptionPane.OK_OPTION){
                    util.ModificationUitlisateur1();
                    System.out.print("ok ici");
                    if (util.a == true){
                        JOptionPane.showMessageDialog(this, "LA MODIFICATION A ÉTÉ ÉFFECTUÉ", "Information",JOptionPane.INFORMATION_MESSAGE);
                        this.ModifNomU.setText("");
                        this.ModifPrenomU.setText("");
                        this.ModifTelephoneU.setText("");
                        this.ModifSexeU.setText("");
                        this.ModifStatutU.setText("");
                        this.ModifMdpU.setText("");
                        this.ModifConfirmU.setText("");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "LA MODIFICATION N'A PAS PU ETRE ÉFFECTUÉ", "Erreur",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "LES MOTS DE PASSES NE CORRESPONDENT PAS", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_ModifierUtilsateurActionPerformed

    private void SupprimerCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerCompteActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "VOULEZ-VOUS VRAIMENT SUPPRIMER CE COMPTE", "Supprimer Compte", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.OK_OPTION){
            util.Nom = this.ComboSupprimeU.getSelectedItem().toString();
            util.SupprimerUtilisateur();
            JOptionPane.showMessageDialog(null, "CE COMPTE A ÉTÉ SUPPRIMÉ AVEC SUCCESS", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null, "CE COMPTE N'AS PAS PU ETRE SUPPRIMÉ", "Ereur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SupprimerCompteActionPerformed

    private void AjouterLivresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterLivresActionPerformed
        livre.NomLivre = this.AjoutNomL.getText();
        livre.Genre = this.AjoutGenreL.getText();
        //conversion du type java.util.date en java.sql.date
        format = formatDate.format(AjoutAnneeSortL.getDate());
        livre.annéeSortie = java.sql.Date.valueOf(format);
        livre.Auteur = this.AjoutAuteurL.getText();
        livre.MaisonEdition = this.AjoutMEditionL.getText();
        
        format = formatDate.format(AjoutDateEnregL.getDate());
        livre.DateEnregistrement = java.sql.Date.valueOf(format);
        livre.Quantité = Integer.parseInt(this.AjoutQuantite.getText());
        
        if (AjoutNomL.getText().equals("") || AjoutGenreL.getText().equals("") || AjoutAnneeSortL.getDate().equals("") || AjoutAuteurL.getText().equals("") || AjoutMEditionL.getText().equals("") || AjoutDateEnregL.getDate().equals("") || AjoutQuantite.getText().equals("")){
            JOptionPane.showMessageDialog(this, "VEUILLEZ REMPLIR TOUS LES CHAMPS", "Erreur",JOptionPane.ERROR_MESSAGE);
        }
        else{
            livre.AjouterLivre();
            if (livre.a == true){
                JOptionPane.showMessageDialog(this, "L'ENREGISTREMENT A ÉTÉ ÉFFECTUÉ", "Information",JOptionPane.INFORMATION_MESSAGE);
                this.AjoutNomL.setText("");
                this.AjoutGenreL.setText("");
                this.AjoutAnneeSortL.setDate(null);
                this.AjoutMEditionL.setText("");
                this.AjoutDateEnregL.setDate(null);
                this.AjoutQuantite.setText("");
                this.AjoutAuteurL.setText("");
            }
            else{
                JOptionPane.showMessageDialog(this, "L'ENREGISTREMENT N'A PAS PU ETRE ÉFFECTUÉ", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_AjouterLivresActionPerformed

    private void SupprimLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimLivreActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "VOULEZ-VOUS VRAIMENT SUPPRIMER CE LIVRE", "Supprimer Livre", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.OK_OPTION){
            livre.NomLivre = this.supLivre.getSelectedItem().toString();
            livre.SupprimerLivre();
            if (livre.a == true){
                JOptionPane.showMessageDialog(null, "CE LIVRE A ÉTÉ SUPPRIMÉ AVEC SUCCESS", "Message", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "CE LIVRE N'AS PAS PU ETRE SUPPRIMÉ", "Ereur", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
    }//GEN-LAST:event_SupprimLivreActionPerformed

    private void BarreMaintenaceLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarreMaintenaceLActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(Maintenance);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        ComboMaintL.removeAllItems();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
            st =con.createStatement();
            rs = st.executeQuery("SELECT Nom_Livre FROM livre");

            while(rs.next()){
                ComboMaintL.addItem(rs.getString("Nom_Livre"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_BarreMaintenaceLActionPerformed

    private void MaintenanceLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaintenanceLivreActionPerformed
        livre.NomLivre = this.ComboMaintL.getSelectedItem().toString();
        //conversion de java.util.date en java.sql.date
        format = formatDate.format(DateEnregisMaint.getDate());
        livre.DateEnregistrement = java.sql.Date.valueOf(format);
        livre.Moyen_endomagé = this.MoyenEndo.getText();
        livre.Quantité = Integer.parseInt(this.MaintenanceQte.getText());
        livre.Mesure_prise = this.MesurePrise.getText();
        
        if (ComboMaintL.getSelectedItem().equals("") || DateEnregisMaint.getDate().equals("") || MoyenEndo.getText().equals("") || MesurePrise.getText().equals("") || MaintenanceQte.getText().equals("")){
            JOptionPane.showMessageDialog(this, "VEUILLEZ REMPLIR TOUS LES CHAMPS", "Erreur",JOptionPane.ERROR_MESSAGE);
        }
        else{
            livre.EntretienLivre();
            if (livre.a == true){
                JOptionPane.showMessageDialog(this, "L'ENREGISTREMENT A ÉTÉ ÉFFECTUÉ", "Information",JOptionPane.INFORMATION_MESSAGE);
                this.ComboMaintL.setSelectedItem("");
                this.DateEnregisMaint.setDate(null);
                this.MoyenEndo.setText("");
                this.MaintenanceQte.setText("");
                this.MesurePrise.setText("");
                this.MaintenanceQte.setText("");
            }
            else{
                JOptionPane.showMessageDialog(this, "L'ENREGISTREMENT N'A PAS PU ETRE ÉFFECTUÉ", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_MaintenanceLivreActionPerformed

    private void MMdpUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMdpUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MMdpUActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(VoirMaintenance);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        vueLivres.removeAll();
        try {          
           con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
           st = con.createStatement();
           rs = st.executeQuery("SELECT * FROM maintenance");
           vueMiantenance.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            System.out.print("L'erreur est" + e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void EnregistreEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistreEmpruntActionPerformed
        int sum = 0;
        if (EmpruntNomClient.getSelectedItem().toString().equals("") || EmpruntTelephone.getText().equals("") || vueLivres.equals("") || EmpruntQuantite.getSelectedItem().toString().equals("") || DateEmprunt.getDate().equals("") || DateDelai.getDate().equals("")){
            JOptionPane.showMessageDialog(null, "VEUILLEZ REMPLIR TOUT LES CHAMPS", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        else{
            emprunt.NomAdherent = this.EmpruntNomClient.getSelectedItem().toString();
            emprunt.TelAdherent = this.EmpruntTelephone.getText();
            //emprunt.NomLivre = this.ComboNomLivre.getSelectedItem().toString();
            //emprunt.Quantité = Integer.parseInt(this.EmpruntQuantite.getSelectedItem().toString());
            format = formatDate.format(DateEmprunt.getDate());
            emprunt.DateEmpruntL = java.sql.Date.valueOf(format);
            format = formatDate.format(DateDelai.getDate());
            emprunt.DelaiRemiseL = java.sql.Date.valueOf(format);
            emprunt.Statut = "Emprunté";
            
            count = vueLivreEmprunt.getRowCount();
            count -= 1; 
            System.out.print(count);
            
            for (int i = 0; i <= count; i++){
                sum = sum + Integer.parseInt(vueLivreEmprunt.getValueAt(i, 1).toString());
            }
            if (count > 3){
            JOptionPane.showMessageDialog(null, "UN ADHERENT NE PEUT PAS EMPRUNTER PLUS DE 3 LIVRES", "Erreur", JOptionPane.ERROR_MESSAGE);            
            }
            else{
                emprunt.ControleEligibilité();
                if(emprunt.a == true){
                    emprunt.ControleNombreEmprunt();
                    if (emprunt.a == false){
                        for (int i = 0; i <= count; i++){
                            emprunt.NomLivre = (String)vueLivreEmprunt.getValueAt(i, 0);
                            emprunt.Quantité = Integer.parseInt(vueLivreEmprunt.getValueAt(i, 1).toString());
                            emprunt.ControleQuantitéDisponible();
                            if (emprunt.a == true){
                                if (sum <= 3){                                
                                    emprunt.enregistrerEmprunt();
                                    if (emprunt.a == true){
                                        emprunt.deductionQuantite();
                                        if (emprunt.a == true){
                                            JOptionPane.showMessageDialog(null, "L'ENREGISTREMENT A ÉTÉ ÉFFECTUÉ", "Message", JOptionPane.INFORMATION_MESSAGE);
                                        }                            
                                    } 
                                    else{
                                        JOptionPane.showMessageDialog(null, "L'ENREGISTREMENT N'A PAS PU ETRE ÉFFECTUÉ", "Erreur", JOptionPane.ERROR_MESSAGE);
                                    }

                                }
                                else{
                                    JOptionPane.showMessageDialog(null, "LA SUM DES LIVRES DANS LE TABLEAU EST SUPERIEUR A 3, VEUILLEZ REDUIRE LA QUANTITÉ", "Erreur", JOptionPane.ERROR_MESSAGE);
                                }
                                                       
                            
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "LA QUANTITÉ EN STOCK EST INSUFFISANTE POUR LE LIVRE: " + emprunt.NomLivre, "Erreur", JOptionPane.ERROR_MESSAGE);
                            }
                        }                        
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "CET ADHERENT A DÉJA EMPRUNTÉ 3 LIVRES", "Erreur", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "CET ADHERENT N'EST PAS ELIGIBLE POUR ÉFFECTUER UN EMPRUNT", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        
    }//GEN-LAST:event_EnregistreEmpruntActionPerformed

    private void EnregisAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregisAdherentActionPerformed
        adherent.NomAdherent = this.ComboNAdherent.getSelectedItem().toString();
        stats.NomAdherent = this.ComboNAdherent.getSelectedItem().toString();
        adherent.AdresseAdherent = this.AdresseAdherent.getText();
        adherent.telAdherent = this.TelAdherent.getText();
        adherent.LivreAdherent = this.ComboLAdherent.getSelectedItem().toString();
        stats.LivreAdherent = this.ComboLAdherent.getSelectedItem().toString();
        
        if (ComboNAdherent.getSelectedItem().toString().equals("") || AdresseAdherent.getText().equals("") || ComboLAdherent.getSelectedItem().toString().equals("") || TelAdherent.getText().equals("")){
            JOptionPane.showMessageDialog(this, "VEUILLEZ REMPLIR TOUT LES CHAMPS", "Erreur",JOptionPane.ERROR_MESSAGE);
        }
        else{
            adherent.GenererRegulariteAvecEnregistrement();
            stats.AjoutAdherent_pourStats_adherent();
            
            stats.AjoutAdherent_pourStats_livre();
            if (adherent.a == true){
                JOptionPane.showMessageDialog(this, "L'ENREGISTREMENT A ÉTÉ ÉFFECTUÉ AVEC SUCCESS", "VALIDATION",JOptionPane.INFORMATION_MESSAGE);
                ComboLAdherent.setSelectedItem("");
                AdresseAdherent.setText("");
                TelAdherent.setText("");
                ComboNAdherent.setSelectedItem("");
            }
            else{
                JOptionPane.showMessageDialog(this, "L'ENREGISTREMENT N'A PAS PU ETRE EFFECTUÉ", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_EnregisAdherentActionPerformed

    private void SupprimeAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimeAdherentActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "VOULEZ-VOUS VRAIMENT SUPPRIMER CETTE ADHERENT", "Supprimer Adherent", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.OK_OPTION){
            adherent.NomAdherent = this.ComboSupAdherent.getSelectedItem().toString();
            adherent.supprimerAdherent();
            if (adherent.a == true){
                JOptionPane.showMessageDialog(null, "CET ADHERENT A ÉTÉ SUPPRIMÉ AVEC SUCCESS", "Message", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "CET ADHERENT N'AS PAS PU ETRE SUPPRIMÉ", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_SupprimeAdherentActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        vueAdherent.removeAll();
        try {          
           con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
           st = con.createStatement();
           rs = st.executeQuery("SELECT Nom, Telephone, regularité FROM adherent");
           vueAdherent.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            System.out.print("L'erreur est" + e);
        }
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(VoirAdherent);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void AjoutLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutLivreActionPerformed
        c = false;
        ajout = 0;
        emprunt.NomLivre = this.ComboNomLivre.getSelectedItem().toString();
        emprunt.Quantité = 
        ligne = vueLivreEmprunt.getRowCount();
        ligne = ligne - 1;
        Object[] tab = new Object [100];
        
        for(int i = 0; i <= ligne; i++){
            if (vueLivreEmprunt.getValueAt(i, 0).equals(emprunt.NomLivre)){
                c = true;               
                ajout = Integer.parseInt(vueLivreEmprunt.getValueAt(i, 1).toString());
                p = i;
            }
        }
        if (c == true){
            ajout = ajout + Integer.parseInt(EmpruntQuantite.getSelectedItem().toString());
            vueLivreEmprunt.setValueAt(ajout, p, 1);
        }
        else{
            tab[0] = emprunt.NomLivre;
            tab[1] = EmpruntQuantite.getSelectedItem().toString();
            DefaultTableModel info = (DefaultTableModel)vueLivreEmprunt.getModel();
            info.addRow(tab);
        } 
        
    }//GEN-LAST:event_AjoutLivreActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void SupLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupLivreActionPerformed
        DefaultTableModel info = (DefaultTableModel)vueLivreEmprunt.getModel();
        if (vueLivreEmprunt.getSelectedRow() != -1){
            info.removeRow(vueLivreEmprunt.getSelectedRow());
        }       
    }//GEN-LAST:event_SupLivreActionPerformed

    private void RecupéréEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecupéréEmpruntActionPerformed
        System.out.print("hey");
        if (vueEmprunts.getSelectedRow() != -1){
            ligne = vueEmprunts.getSelectedRow();
            emprunt.NomAdherent = (String)vueEmprunts.getValueAt(ligne, 0);
            emprunt.NomLivre = (String)vueEmprunts.getValueAt(ligne, 2);
            emprunt.Quantité = (int) vueEmprunts.getValueAt(ligne, 6);
            emprunt.Statut = (String)vueEmprunts.getValueAt(ligne, 5);
                    
            if (emprunt.Statut.equals("Emprunté")){
                emprunt.RecupererEmprunt();
                if (emprunt.a == true){
                    emprunt.AugmenterQuantiteDisponible();
                    if(emprunt.a == true){
                        JOptionPane.showMessageDialog(null, "LA RECUPÉRATION A ÉTÉ ÉFFECTUÉ", "Message", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "LA Augementation non-effectue / CHOISISSEZ UN NOM DE CLIENT", "Erreur", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "LA RECUPÉRATION N'A PAS PU ETRE ÉFFECTUÉ / CHOISISSEZ UN NOM DE CLIENT", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "CET EMPRUNT NE PEUT ETRE RECUPÉRÉ, IL A DEJA ÉTÉ RECUPÉRÉ", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "VEUILLEZ SELECTIONNER UN NOM DE CLIENT", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        vueLivreEmprunt.removeAll();
        try {          
           con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms", "root", "");
           st = con.createStatement();
           rs = st.executeQuery("SELECT * FROM emprunts");
           vueEmprunts.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            System.out.print("L'erreur est" + e);
        }
    }//GEN-LAST:event_RecupéréEmpruntActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(StatLivre);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jLayeredPane2.setVisible(true);
        jLayeredPane2.removeAll();
        jLayeredPane2.add(StatAdherent);
        jLayeredPane2.repaint();
        jLayeredPane2.revalidate();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void StatistiquesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StatistiquesMouseClicked
         jLayeredPane1.setVisible(true);
        jLayeredPane1.removeAll();
        jLayeredPane1.add(BarreStats);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }//GEN-LAST:event_StatistiquesMouseClicked

    private void BoutonRechercheStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonRechercheStatActionPerformed
        format = formatDate.format(Date_de_depart.getDate());
        stats.depart = java.sql.Date.valueOf(format);
        format = formatDate.format(Date_de_fin.getDate());
        stats.arrivé = java.sql.Date.valueOf(format);
        
        
        switch (ComboStats.getSelectedItem().toString()) {
            case "Les livres les plus empruntés":
                stats.LivreLePlusEmprunte();
                TableStatLivre.setModel(DbUtils.resultSetToTableModel(stats.rs));
                break;
            case "Les livres les moins empruntés":
                stats.LivreLeMoinsEmprunte();
                TableStatLivre.setModel(DbUtils.resultSetToTableModel(stats.rs));
                break;
            case "Les livres les plus utilisés":
                stats.LivreLePlusLuALaBiblio();
                TableStatLivre.setModel(DbUtils.resultSetToTableModel(stats.rs));
                break;
            default:
                
                TableStatLivre.setModel(s);
                DefaultTableModel infotab = (DefaultTableModel)TableStatLivre.getModel();
                infotab.setRowCount(0);
                try {
                    stats.statsGeneralsLivres();
                    while(stats.rss.next()){
                        table[0] = stats.rss.getString("Nom_Livre");
                        table[1] = stats.rss.getString("Date_enregistrement");
                        table[2] = stats.rss.getString("Quantité");
                        table[3] = stats.rss.getString("QuantiteDisponible");
                        stats.NomLivre = (String) table[0];
                        stats.Quantité_en_emprunt();
                        System.out.print("C'est bon");
                        while (stats.rs.next()){
                            table[4] = stats.rs.getString("COUNT(Nom_livre)");
                        }
                         
                        stats.nombre_de_fois_utilisé();
                        System.out.print("C'est bon ici");
                        while(stats.rs.next()){
                            table[6] = stats.rs.getString("COUNT(Nom_livre)");
                        }
                        
                        stats.nombre_de_fois_emprunté();
                       System.out.print("C'est bon par la");
                        while (stats.rs.next()){
                            table[5] = stats.rs.getString("COUNT(Nom_livre)");
                        }
                        
                        
                        infotab.addRow(table);
                    }
                } catch (SQLException e) {
                    System.out.print("L'erreur est coome ca: "+ e);
                }
                
            break;
        }
    }//GEN-LAST:event_BoutonRechercheStatActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        format = formatDate.format(jDateChooser1.getDate());
        stats.depart = java.sql.Date.valueOf(format);
        format = formatDate.format(jDateChooser2.getDate());
        stats.arrivé = java.sql.Date.valueOf(format);
        switch (jComboBox1.getSelectedItem().toString()) {
            case "Adherent les plus frequent":
                stats.AdherentFrequent();
                tableStatAdherent.setModel(DbUtils.resultSetToTableModel(stats.rs));
                break;
            case "Adherent qui emprunt le plus":
                stats.AdhrentQuiEmpruntLePlus();
                tableStatAdherent.setModel(DbUtils.resultSetToTableModel(stats.rs));
                break;
            case "Adherent qui emprunt le moins":
                stats.AdhrentQuiEmpruntLeMoins();
                tableStatAdherent.setModel(DbUtils.resultSetToTableModel(stats.rs));
                break;
            default:
                stats.statsGeneralsAdherent();
                tableStatAdherent.setModel(ss);
                DefaultTableModel inftab = (DefaultTableModel)tableStatAdherent.getModel();
                inftab.setRowCount(0);
                tableStatAdherent.setModel(DbUtils.resultSetToTableModel(stats.rs));
            break;
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jLabel39MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel39MouseClicked
        this.dispose();
        new InterfaceCreationCompte().setVisible(true);
  
    }//GEN-LAST:event_jLabel39MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new splashScreen().setUndecorated(false);
                
                new MENU().setVisible(true);
                //new splashScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdresseAdherent;
    private com.toedter.calendar.JDateChooser AjoutAnneeSortL;
    private javax.swing.JTextField AjoutAuteurL;
    private com.toedter.calendar.JDateChooser AjoutDateEnregL;
    private javax.swing.JTextField AjoutGenreL;
    private javax.swing.JButton AjoutLivre;
    private javax.swing.JTextField AjoutMEditionL;
    private javax.swing.JPasswordField AjoutMdpU;
    private javax.swing.JTextField AjoutNomL;
    private javax.swing.JTextField AjoutNomU;
    private javax.swing.JTextField AjoutPreU;
    private javax.swing.JTextField AjoutQuantite;
    private javax.swing.JTextField AjoutSexeU;
    private javax.swing.JTextField AjoutStatU;
    private javax.swing.JTextField AjoutTelU;
    private javax.swing.JPanel AjouterLivre;
    private javax.swing.JButton AjouterLivres;
    private javax.swing.JPanel AjouterUtilisa;
    private javax.swing.JButton AuthenModif;
    private javax.swing.JPanel BarreAdherent;
    private javax.swing.JButton BarreAjoutL;
    private javax.swing.JPanel BarreEmprunt;
    private javax.swing.JPanel BarreLivre;
    private javax.swing.JButton BarreMaintenaceL;
    private javax.swing.JButton BarreModifL;
    private javax.swing.JPanel BarreStats;
    private javax.swing.JButton BarreSupL;
    private javax.swing.JPanel BarreUtlisat;
    private javax.swing.JButton BarreVuesL;
    private javax.swing.JButton BoutonRechercheStat;
    private javax.swing.JComboBox<String> ComboLAdherent;
    private javax.swing.JComboBox<String> ComboMaintL;
    private javax.swing.JComboBox<String> ComboModifU;
    private javax.swing.JComboBox<String> ComboNAdherent;
    private javax.swing.JComboBox<String> ComboNomLivre;
    private javax.swing.JComboBox<String> ComboStats;
    private javax.swing.JComboBox<String> ComboSupAdherent;
    private javax.swing.JComboBox<String> ComboSupprimeU;
    private javax.swing.JLabel Confir;
    private javax.swing.JPasswordField Confirm;
    private javax.swing.JButton CréerCompte;
    private com.toedter.calendar.JDateChooser DateDelai;
    private com.toedter.calendar.JDateChooser DateEmprunt;
    private com.toedter.calendar.JDateChooser DateEnregisMaint;
    private com.toedter.calendar.JDateChooser Date_de_depart;
    private com.toedter.calendar.JDateChooser Date_de_fin;
    private javax.swing.JComboBox<String> EmpruntNomClient;
    private javax.swing.JComboBox<String> EmpruntQuantite;
    private javax.swing.JTextField EmpruntTelephone;
    private javax.swing.JButton EnregisAdherent;
    private javax.swing.JButton EnregistreEmprunt;
    private javax.swing.JPanel EnregistrerAdherent;
    private javax.swing.JPanel EnregistrerEmprunt;
    private javax.swing.JLabel GestionAdherent;
    private javax.swing.JLabel GestionEmprunt;
    private javax.swing.JLabel GestionLivre;
    private javax.swing.JLabel GestionUtilisateur;
    private javax.swing.JLabel MMdU;
    private javax.swing.JTextField MMdpU;
    private javax.swing.JLabel MNoU;
    private javax.swing.JTextField MNomU;
    private javax.swing.JPanel Maintenance;
    private javax.swing.JButton MaintenanceLivre;
    private javax.swing.JTextField MaintenanceQte;
    private javax.swing.JLabel MdpU;
    private javax.swing.JTextArea MesurePrise;
    private com.toedter.calendar.JDateChooser ModifAnneeL;
    private javax.swing.JTextField ModifAuteurL;
    private javax.swing.JTextField ModifConfirmU;
    private com.toedter.calendar.JDateChooser ModifDateEnreL;
    private javax.swing.JTextField ModifGenreL;
    private javax.swing.JPanel ModifLivre;
    private javax.swing.JTextField ModifMEditionL;
    private javax.swing.JTextField ModifMdpU;
    private javax.swing.JTextField ModifNomL;
    private javax.swing.JComboBox<String> ModifNomRef;
    private javax.swing.JTextField ModifNomU;
    private javax.swing.JTextField ModifPrenomU;
    private javax.swing.JTextField ModifQuantiteL;
    private javax.swing.JTextField ModifSexeU;
    private javax.swing.JTextField ModifStatutU;
    private javax.swing.JTextField ModifTelephoneU;
    private javax.swing.JButton ModifierLivres;
    private javax.swing.JButton ModifierUtilsateur;
    private javax.swing.JTextField MoyenEndo;
    private javax.swing.JLabel NomU;
    private javax.swing.JPanel RecupEmprunt;
    private javax.swing.JButton RecupéréEmprunt;
    private javax.swing.JLabel SexeU;
    private javax.swing.JPanel StatAdherent;
    private javax.swing.JPanel StatLivre;
    private javax.swing.JLabel StatU;
    private javax.swing.JLabel Statistiques;
    private javax.swing.JButton SupLivre;
    private javax.swing.JButton SupprimLivre;
    private javax.swing.JButton SupprimeAdherent;
    private javax.swing.JPanel SupprimeLivre;
    private javax.swing.JPanel SupprimerAdherent;
    private javax.swing.JButton SupprimerCompte;
    private javax.swing.JPanel SupprimerUtilisa;
    private javax.swing.JTable TableStatLivre;
    private javax.swing.JTextField TelAdherent;
    private javax.swing.JLabel TelU;
    private javax.swing.JPanel VoirAdherent;
    private javax.swing.JPanel VoirLivre;
    private javax.swing.JPanel VoirMaintenance;
    private javax.swing.JPanel VoirUtilisateur;
    private javax.swing.JButton VuesUtilisateur;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    private javax.swing.JPanel modifierUtilisa;
    private javax.swing.JPanel modifierUtilsa2;
    private javax.swing.JComboBox<String> supLivre;
    private javax.swing.JLabel tPreU;
    private javax.swing.JTable tableStatAdherent;
    private javax.swing.JTable vueAdherent;
    private javax.swing.JTable vueEmprunts;
    private javax.swing.JTable vueLivreEmprunt;
    private javax.swing.JTable vueLivres;
    private javax.swing.JTable vueMiantenance;
    private javax.swing.JTable vueUtilisateur;
    // End of variables declaration//GEN-END:variables
}
